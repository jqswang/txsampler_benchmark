TARGET = ferret

LDLIBS += $(LIBS) -lrt -lm -lgsl -lgslcblas -lstdc++

.PHONY:	all clean install dirs lib tools image server benchmark

include ${PARSEC_ROOT}/common_flag.mk
CURDIR = $(shell pwd)
ROOT = $(CURDIR)
SRCDIR = $(ROOT)/src
INCDIR = $(ROOT)/include

BINDIR = $(ROOT)/bin
LIBDIR = $(ROOT)/lib
OBJDIR = $(ROOT)/obj

CFLAGS += -I$(INCDIR) -I${PARSEC_ROOT}/pkgs/lib/install/include
LDFLAGS += -L$(LIBDIR) -L${PARSEC_ROOT}/pkgs/lib/install/lib64 -L${PARSEC_ROOT}/pkgs/lib/install/lib
LDLIBS += -lcass -lgsl -lgslcblas

IMAGE_LDFLAGS +=
IMAGE_LDLIBS += `$(PARSEC_ROOT)/pkgs/lib/install/bin/Magick-config --libs`

VPATH = $(CURDIR)/src:$(CURDIR)/src/lsh:$(CURDIR)/tools:$(CURDIR)/image:$(CURDIR)/benchmark

export LIBDIR BINDIR OBJDIR CC CXX CFLAGS LDFLAGS LDLIBS

all: gsl imagick  dirs lib tools benchmark

include ${PARSEC_ROOT}/common_rule.mk
dirs:
	mkdir -p $(BINDIR)
	mkdir -p $(LIBDIR)
	mkdir -p $(OBJDIR)

# build the cass library
lib:	$(LIBDIR)/libcass.a

lib_src := $(wildcard src/*.c) $(wildcard src/lsh/*.c)
lib_src := $(notdir $(lib_src))
lib_obj := $(addprefix $(OBJDIR)/, $(lib_src:.c=.o))


$(LIBDIR)/libcass.a:	$(lib_obj)
	@echo "   A  '$@'"
	@$(AR) rcs $@ $^

# build the image support library
libimage_src := image.c extract.c edge.c srm.c
libimage_obj := $(addprefix $(OBJDIR)/, $(libimage_src:.c=.o))


$(LIBDIR)/libcassimage.a:	$(libimage_obj)
	@echo "   A  '$@'"
	@$(AR) rcs $@ $^

# build the tool programs
tools_src := $(wildcard tools/*.c)
tools_tgt := $(notdir $(tools_src))
tools_tgt := $(addprefix $(BINDIR)/, $(tools_tgt:.c=))

tools : $(tools_tgt)

server_src := $(wildcard server/*.c)
server_tgt := $(notdir $(server_src))
server_tgt := $(addprefix $(BINDIR)/, $(server_tgt:.c=))

server : $(server_tgt)

## parallel
benchmark_base := ferret-parallel
LDLIBS += -lpthread


benchmark_src := $(benchmark_base).c

benchmark_tgt := $(notdir $(benchmark_src))
benchmark_tgt := $(addprefix $(BINDIR)/, $(benchmark_tgt:.c=))

benchmark : $(benchmark_tgt)

image_tgt := cass_img_extract
image_tgt := $(addprefix $(BINDIR)/, $(image_tgt))

image: $(image_tgt)

clean:
	-rm -rf $(OBJDIR) $(BINDIR) $(LIBDIR)

$(OBJDIR)/%.o : %.c
	@echo "   CC '$<' ==> '$@'"
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJDIR)/%.o : %.cpp
	@echo "   CXX '$<' ==> '$@'"
	$(CXX) $(CFLAGS) $(CXXFLAGS) -c $< -o $@

$(tools_tgt): $(BINDIR)/% : $(OBJDIR)/%.o $(LIBDIR)/libcass.a
	@echo "   CXX '$<' ==> '$@'"
	$(CXX) $(CFLAGS) $(LDFLAGS) $^ -o $@ $(LDLIBS)

$(benchmark_tgt): $(BINDIR)/% : $(OBJDIR)/%.o $(LIBDIR)/libcass.a $(LIBDIR)/libcassimage.a
	@echo "   CXX '$<' ==> '$@'"
	$(CXX) $(CFLAGS) $(LDFLAGS) $(IMAGE_LDFLAGS) $^ -o $@ $(LDLIBS) $(IMAGE_LDLIBS)

$(image_tgt): $(BINDIR)/% : $(OBJDIR)/%.o $(LIBDIR)/libcass.a $(LIBDIR)/libcassimage.a
	@echo "   CXX '$<' ==> '$@'"
	$(CXX) $(CFLAGS) $(LDFLAGS) $(IMAGE_LDFLAGS) $^ -o $@ $(LDLIBS) $(IMAGE_LDLIBS)
