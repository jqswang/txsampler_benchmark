SET (CMAKE_C_COMPILER "gcc")
SET (CMAKE_CXX_COMPILER "g++")
PROJECT (Cavalia)
#SET (CMAKE_CXX_FLAGS "-std=c++11 -Wno-deprecated-declarations -DOCC -DCUCKOO_INDEX -DVALUE_LOGGING" CACHE INTERNAL "compiler options" FORCE)
SET (CMAKE_CXX_FLAGS "-std=c++11 -Wno-deprecated-declarations -DCUCKOO_INDEX" CACHE INTERNAL "compiler options" FORCE)
SET (CMAKE_CXX_FLAGS_DEBUG "-O0 -g" CACHE INTERNAL "compiler options" FORCE)
SET (CMAKE_CXX_FLAGS_RELEASE "-DNUMA -DRTM -DEXTERNAL_RTM -O3 -g" CACHE INTERNAL "compiler options" FORCE)
IF (NOT CMAKE_BUILD_TYPE)
	SET (CMAKE_BUILD_TYPE "Release")
ENDIF ()
MESSAGE (STATUS "Build type: ${CMAKE_BUILD_TYPE}")
CMAKE_MINIMUM_REQUIRED (VERSION 2.8)

INCLUDE_DIRECTORIES (${PROJECT_SOURCE_DIR}/aux-lib/libzmq/install/include)
LINK_DIRECTORIES (${PROJECT_SOURCE_DIR}/aux-lib/libzmq/install/lib)
INCLUDE_DIRECTORIES (${PROJECT_SOURCE_DIR}/aux-lib/jemalloc/install/include)
LINK_DIRECTORIES (${PROJECT_SOURCE_DIR}/aux-lib/jemalloc/install/lib)
INCLUDE_DIRECTORIES (${PROJECT_SOURCE_DIR}/aux-lib/lz4/install/include)
LINK_DIRECTORIES (${PROJECT_SOURCE_DIR}/aux-lib/lz4/install/lib)
INCLUDE_DIRECTORIES (${PROJECT_SOURCE_DIR}/aux-lib/libcuckoo/install/include)
LINK_DIRECTORIES (${PROJECT_SOURCE_DIR}/aux-lib/libcuckoo/install/lib)
INCLUDE_DIRECTORIES (${TSX_ROOT}/lib/rtm)
LINK_DIRECTORIES (${TSX_ROOT}/lib/rtm)

LINK_DIRECTORIES (${PAPI_LIB_PATH})

INCLUDE_DIRECTORIES (${PROJECT_SOURCE_DIR}/Common)
INCLUDE_DIRECTORIES (${PROJECT_SOURCE_DIR}/Communication)
INCLUDE_DIRECTORIES (${PROJECT_SOURCE_DIR}/Database)

LINK_DIRECTORIES (${PROJECT_SOURCE_DIR}/build/Database)
LINK_DIRECTORIES (${PROJECT_SOURCE_DIR}/build/Communication)
ADD_SUBDIRECTORY (Communication)
ADD_SUBDIRECTORY (Database)
ADD_SUBDIRECTORY (TpccBenchmark)
#ADD_SUBDIRECTORY (MicroBenchmark)
#ADD_SUBDIRECTORY (SmallbankBenchmark)

